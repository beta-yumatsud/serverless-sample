service: notification-slack # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
frameworkVersion: ">=1.42.0 <2.0.0"

provider:
  name: aws
  runtime: python3.7
  region: ap-northeast-1
#  stage: dev

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "codepipeline:GetPipeline"
      Resource: "*"
  environment:
    WEBHOOK_URL: ${file(./serverless.env.yml):slack.webhook_url}
    CHANNEL: ${file(./serverless.env.yml):slack.channel}

package:
  include:
    - functions/**
  exclude:
    - serverless.yml
    - serverless.env.yml

functions:
  codepipeline:
    handler: codepipeline.handler
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.codepipeline
            detail-type:
              - CodePipeline Stage Execution State Change
            detail:
              state:
              - SUCCEEDED
              - FAILED
              - STARTED
  codebuild:
    handler: codebuild.handler
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.codebuild
            detail-type:
              - CodeBuild Build State Change
            detail:
              build-status:
                - IN_PROGRESS
                - FAILED
                - STOPPED
                - SUCCEEDED
  ecs:
    handler: ecs.handler
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.ecs
            detail-type:
              - ECS Task State Change

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
